<?xml version="1.0" encoding="utf-8"?>

<project basedir="." default="jar" name="yecht">
  <description>
    	Yecht is a Syck port, a YAML 1.0 processor for Ruby
  </description>

  <!-- First try to load machine-specific properties. -->
  <property file="build.properties"/>
  
  <!-- And then load the defaults. It seems backwards to set defaults AFTER 
       setting local overrides, but that's how Ant works. -->
  <property file="default.build.properties"/>
  
  <path id="build.classpath">
    <fileset dir="${lib.dir}" includes="*.jar" excludes="yecht*.jar"/>
  </path>

  <patternset id="java.src.pattern">
    <include name="**/*.java"/>
  </patternset>

  <target name="prepare" description="Creates the directories needed for building">
    <xmlproperty file="build-config.xml" keepRoot="false" collapseAttributes="true"/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${yecht.classes.dir}"/>
    <mkdir dir="${test.classes.dir}"/>
  </target>

  <target name="jacc" depends="prepare" description="Standalone target that generates all our jacc based source files.">
    <java jar="lib/jacc.jar" fork="true">
      <arg line="${main.src.dir}/org/yecht/YAMLGrammar.jacc"/>
    </java>
  </target>

  <target name="re2j" depends="prepare" description="Standalone target that generates all our re2j based source files. Requires re2j to be on the path">
    <exec executable="re2j" failonerror="true">
      <arg line="-o ${main.src.dir}/org/yecht/TokenScanner.java"/>
      <arg line="${main.src.dir}/org/yecht/TokenScanner.re"/>
    </exec>
  </target>

  <target name="ragel" depends="prepare" description="Standalone target that generates all our ragel based source files. Requires ragel and rlgen-java to be on the path">
    <exec executable="ragel" failonerror="true">
      <arg line="-J"/>
      <arg line="-o ${main.src.dir}/org/yecht/BytecodeScanner.java"/>
      <arg line="${main.src.dir}/org/yecht/BytecodeScanner.rl"/>
    </exec>

    <exec executable="ragel" failonerror="true">
      <arg line="-J"/>
      <arg line="-o ${main.src.dir}/org/yecht/ImplicitScanner.java"/>
      <arg line="${main.src.dir}/org/yecht/ImplicitScanner.rl"/>
    </exec>
  </target>  

  <target name="compile" depends="prepare" description="Compile the source files for the project.">
    <javac destdir="${yecht.classes.dir}" debug="true" source="${javac.version}" target="${javac.version}">
      <classpath refid="build.classpath"/>
      <src path="${main.src.dir}"/>
      <patternset refid="java.src.pattern"/>
    </javac>
  </target>

  <target name="compile-with-ragel" depends="ragel" description="Compile the source files for the project.">
    <javac destdir="${yecht.classes.dir}" debug="true" source="${javac.version}" target="${javac.version}">
      <classpath refid="build.classpath"/>
      <src path="${main.src.dir}"/>
      <patternset refid="java.src.pattern"/>
    </javac>
  </target>

  <target name="compile-tests" depends="compile" description="Compile the test source files for the project.">
    <javac destdir="${test.classes.dir}" debug="true" source="${javac.version}" target="${javac.version}">
      <classpath refid="build.classpath"/>
      <classpath>
        <pathelement location="${yecht.classes.dir}"/>
      </classpath>
      <src path="${test.src.dir}"/>
    </javac>
  </target>

  <target name="test" depends="compile-tests" description="Runs all tests">
    <junit>
      <classpath refid="build.classpath"/>
      <classpath>
      	<pathelement location="${yecht.classes.dir}"/>
      	<pathelement location="${test.classes.dir}"/>
      </classpath>
      <formatter type="brief" usefile="false"/>
      <batchtest>
        <fileset dir="${test.src.dir}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="jar" depends="test" description="Create the yecht.jar file">
    <jar destfile="${lib.dir}/yecht-0.0.1.jar">
      <fileset dir="${yecht.classes.dir}">
        <include name="**/*.class"/>
        <include name="**/*.properties"/>
      </fileset>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
      </manifest>
    </jar>
  </target>
	
  <target name="dist-bin" depends="jar">
    <tar destfile="${release.dir}/yecht-bin-0.0.1.tar.gz" compression="gzip">
      <tarfileset dir="." prefix="yecht-0.0.1">
        <include name="lib/**"/>
        <include name="docs/**"/>
        <include name="LICENSE"/>
        <include name="README"/>
        <include name="CREDITS"/>
      </tarfileset>
    </tar>
  </target>
  
  <target name="dist-src" depends="jar">
    <tar destfile="${release.dir}/yecht-src-0.0.1.tar.gz" compression="gzip">
      <tarfileset dir="." prefix="yecht-0.0.1">
        <include name="lib/**"/>
        <include name="docs/**"/>
        <include name="src/**"/>
        <include name="build.xml"/>
        <include name="LICENSE"/>
        <include name="README"/>
        <include name="CREDITS"/>
        <include name="default.build.properties"/>
      </tarfileset>
    </tar>
  </target>
  
  <target name="dist" depends="dist-bin,dist-src"/>

  <target name="clean" depends="prepare" description="clean almost everything">
    <delete dir="${build.dir}"/>
    <delete file="${lib.dir}/yecht-0.0.1.jar" quiet="true"/>
  </target>

  <target name="full-clean" depends="clean" description="clean almost everything">
    <delete file="-o ${main.src.dir}/org/yecht/TokenScanner.java" quiet="true"/>
  </target>
</project>
